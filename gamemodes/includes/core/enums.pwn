/* Enums */

enum
{
/*----------------DIALOGS-----------------*/
DIALOG_NOTHING,
DIALOG_NUNMUTE,
DIALOG_SHOWSCORES,
DIALOG_NAMECHANGE,
DIALOG_NAMECHANGE2,
BIGEARS,
BIGEARS2,
BIGEARS3,
BIGEARS4,
BIGEARS5,
MAINMENU,
MAINMENU2,
MAINMENU3,
NULLEMAIL,
EMAIL_VALIDATION,
PMOTDNOTICE,
TWADMINMENU,
TWEDITTURFSSELECTION,
TWEDITTURFSMENU,
TWEDITFCOLORSSELECTION,
TWEDITFCOLORSMENU,
TWEDITTURFSOWNER,
TWEDITTURFSLOCKED,
TWEDITTURFSVUL,
TWEDITTURFSPERKS,
PBMAINMENU,
PBARENASELECTION,
PBTOKENBUYMENU,
PBSETUPARENA,
PBJOINPASSWORD,
PBJOINTEAM,
PBSWITCHTEAM,
PBCHANGEPASSWORD,
PBCHANGEGAMEMODE,
PBCHANGELIMIT,
PBCHANGETIMELEFT,
PBCHANGEBIDMONEY,
PBCHANGEHEALTH,
PBCHANGEARMOR,
PBCHANGEWEAPONS1,
PBCHANGEWEAPONS2,
PBCHANGEWEAPONS3,
PBCHANGEEXPLOITPERM,
PBCHANGEFLAGINSTAGIB,
PBCHANGEFLAGNOWEAPONS,
PBARENASCORES,
PBADMINMENU,
PBEDITMENU,
PBEDITARENAMENU,
PBEDITARENANAME,
PBEDITARENADMSPAWNS,
PBEDITARENATEAMSPAWNS,
PBEDITARENAFLAGSPAWNS,
PBEDITARENAINT,
PBEDITARENAVW,
PBEDITARENAHILLRADIUS,
DOORLOCK,
NMUTE,
ADMUTE,
RTONEMENU,
RCPINTRO,
RCPINTRO2,
RCPCHOOSE,
RCPSIZE,
RCPTYPE,
RCPEDITMENU,
RCPEDITMENU2,
DIALOG_SHOPORDER,
DIALOG_SHOPORDER2,
DIALOG_SHOPORDEREMAIL,
DIALOG_SHOPDELIVER,
DIALOG_SHOPDELIVERCAR,
DIALOG_SHOPDELIVERCAR2,
DIALOG_SHOPERROR,
DIALOG_SHOPSENT,
DIALOG_SHOPERROR2,
DIALOG_LOADTRUCK,
DIALOG_LOADTRUCKOLD,
DIALOG_LOADTRUCKL,
DIALOG_LOADTRUCKI,
RESTAURANTMENU,
RESTAURANTMENU2,
STOREMENU,
LOTTOMENU,
ELEVATOR,
ELEVATOR2,
ELEVATOR3,
RENTMENU,
VIPNUMMENU,
VIPNUMMENU2,
TRACKCAR,
TRACKCAR2,
GOTOPLAYERCAR,
VEHICLESTORAGE,
DV_TRACKCAR,
DV_STORAGE,
DIALOG_NUMBER_PLATE,
DIALOG_NUMBER_PLATE_CHOSEN,
COLORMENU,
FIGHTMENU,
REPORTSMENU,
VIPWEPSMENU,
SEMENU,
SESKINS,
SEGEAR,
MPSMENU,
MPSSKINS,
MPSGEAR,
MPSRELEASE,
MPSPAYTICKETSCOP,
MPSPAYTICKETS,
GIVEKEYS,
REMOVEKEYS,
MPSFRELEASE,
HQENTRANCE,
HQEXIT,
HQCUSTOMINT,
HQDELETE,
FAQMENU,
COLOREDDOTSFAQ,
LOCKSFAQ,
SKINSFAQ,
ATMFAQ,
FACTIONSFAQ,
GANGSFAQ,
HITMENFAQ,
WEBSITEFAQ,
FURTHERHELPFAQ,
SHOPMENU,
UNMODCARMENU,
DIALOG_CDBUY,
DIALOG_CDLOCKBUY,
DIALOG_CDLOCKMENU,
DIALOG_CDGLOCKMENU,
JOBHELPMENU,
DETECTIVEJOB,
DETECTIVEJOB2,
DETECTIVEJOB3,
LAWYERJOB,
LAWYERJOB2,
LAWYERJOB3,
WHOREJOB,
WHOREJOB2,
WHOREJOB3,
DRUGDEALERJOB,
DRUGDEALERJOB2,
DRUGDEALERJOB3,
MECHANICJOB,
MECHANICJOB2,
MECHANICJOB3,
BODYGUARDJOB,
BODYGUARDJOB2,
BODYGUARDJOB3,
ARMSDEALERJOB,
ARMSDEALERJOB2,
ARMSDEALERJOB3,
BOXERJOB,
BOXERJOB2,
BOXERJOB3,
TAXIJOB,
TAXIJOB2,
TAXIJOB3,
SMUGGLEJOB,
SMUGGLEJOB2,
SMUGGLEJOB3,
CRAFTJOB,
BARTENDERJOB,
TRUCKERJOB,
PIZZAJOB,
MDC_START_ID,
MDC_MAIN,
MDC_FIND,
MDC_MEMBERS,
MDC_BLANK,
MDC_WARRANTS,
MDC_CHECK,
MDC_LICENSES,
MDC_MESSAGE,
MDC_SMS,
MDC_BOLOLIST,
MDC_ISSUE,
MDC_DELETE,
MDC_DEL_WARRANT,
MDC_DEL_BOLO,
MDC_LOGOUT,
MDC_CREATE,
MDC_CIVILIANS,
MDC_ISSUE_SLOT,
MDC_MESSAGE_2,
MDC_SMS_2,
MDC_BOLO,
MDC_BOLO_SLOT,
MDC_END_ID,
DRINKLISTDIALOG,
DRINKDIALOG,
TIPDIALOG,
LAELEVATOR,
GIVETOY,
TOYS,
DELETETOY,
WEARTOY,
SELLTOY,
CONFIRMSELLTOY,
BUYTOYS,
BUYTOYS2,
BUYTOYS3,
BUYTOYSGOLD,
BUYTOYSGOLD2,
BUYTOYSGOLD3,
EDITTOYS,
EDITTOYS2,
EDITTOYSBONE,
EDITTOYSPX,
EDITTOYSPY,
EDITTOYSPZ,
EDITTOYSRX,
EDITTOYSRY,
EDITTOYSRZ,
EDITTOYSSX,
EDITTOYSSY,
EDITTOYSSZ,
LAELEVATORPASS,
NGMENU,
NGMENUWEP,
NGMENUSKIN,
BUYTOYSCOP,
BUYTOYSCOP2,
BUYTOYSCOP3,
DIALOG_LICENSE_BUY,
DIALOG_ADMAIN,
DIALOG_ADLIST,
DIALOG_ADPLACE,
DIALOG_ADPLACEP,
DIALOG_ADSEARCH,
DIALOG_ADSEARCHLIST,
DIALOG_ADFINAL,
DIALOG_ADCATEGORY,
DIALOG_ADCATEGORYPLACE,
DIALOG_ADCATEGORYPLACEP,
DIALOG_ADVERTVOUCHER,
SELLVIP,
DIALOG_DELETECAR,
PANEL,
PANELCONTROLS,
DIALOG_CHANGEPASS,
DIALOG_CHANGEPASS2,
SETSTATION,
CUSTOM_URLCHOICE,
GENRES,
STATIONLIST,
STATIONLISTEN,
TOP50LIST,
TOP50LISTEN,
STATIONSEARCH,
STATIONSEARCHLIST,
STATIONSEARCHLISTEN,
INTERACTMAIN,
INTERACTPAY,
INTERACTGIVE,
INTERACTGIVE2,
REGISTERSEX,
REGISTERMONTH,
REGISTERDAY,
REGISTERYEAR,
REGISTERREF,
STORAGESTORE,
STORAGEEQUIP,
DMRCONFIRM,
SHOPOBJECT_ORDERID,
SHOPOBJECT_GIVEPLAYER,
SHOPOBJECT_OBJECTID,
SHOPOBJECT_TOYSLOT,
SHOPOBJECT_SUCCESS,
MDC_SHOWCRIMES,
VIP_EXPIRES,
ADMIN_VEHCHECK,
FLAG_LIST,
FLAG_DELETE,
FLAG_DELETE2,
CRATE_GUNMENU,
PBFORCE,
MDC_REPORTS,
MDC_SHOWREPORTS,
DIALOG_LISTGROUPS,
DIALOG_EDITGROUP,
DIALOG_GROUP_NAME,
DIALOG_GROUP_TYPE,
DIALOG_GROUP_ALLEGIANCE,
DIALOG_GROUP_DUTYCOL,
DIALOG_GROUP_RADIOCOL,
DIALOG_GROUP_EDITSTOCK,
DIALOG_GROUP_EDITWEPS,
DIALOG_GROUP_EDITDIVS,
DIALOG_GROUP_EDITRANKS,
DIALOG_GROUP_GETWEPS,
DIALOG_GROUP_GETSKIN,
DIALOG_GROUP_DISBAND,
DIALOG_GROUP_EDITCOST,
DIALOG_GROUP_EDITWEPID,
DIALOG_GROUP_EDITDIV,
DIALOG_GROUP_EDITRANK,
DIALOG_GROUP_LOCKERPOS,
DIALOG_GROUP_CRATEPOS,
DIALOG_GROUP_LOCKERS,
DIALOG_GROUP_RADIOACC,
DIALOG_GROUP_DEPTRADIOACC,
DIALOG_GROUP_INTRADIOACC,
DIALOG_GROUP_BUGACC,
DIALOG_GROUP_GOVACC,
DIALOG_GROUP_FREENC,
DIALOG_GROUP_SPIKES,
DIALOG_GROUP_CADES,
DIALOG_GROUP_CONES,
DIALOG_GROUP_FLARES,
DIALOG_GROUP_BARRELS,
DIALOG_GROUP_CRATE,
DIALOG_GROUP_LISTPAY,
DIALOG_GROUP_EDITPAY,
DIALOG_GROUP_LOCKERDELETECONF,
DIALOG_GROUP_LOCKERACTION,
DIALOG_GROUP_COSTTYPE,
DIALOG_GROUP_GARAGEPOS,
DIALOG_GROUP_JURISDICTION_ADD,
DIALOG_GROUP_JURISDICTION_ADD2,
DIALOG_GROUP_JURISDICTION_LIST,
DIALOG_GROUP_JURISDICTION_RMV,
DIALOG_GROUP_GARAGERANGE,
DIALOG_REPORTMENU,
DIALOG_REPORTMENU2,
DIALOG_REPORTDM,
DIALOG_REPORTRK,
DIALOG_REPORTKOS,
DIALOG_REPORTCR,
DIALOG_REPORTCARRAM,
DIALOG_REPORTPG,
DIALOG_REPORTMG,
DIALOG_REPORTSPAM,
DIALOG_REPORTGDE,
DIALOG_REPORTHACK,
DIALOG_REPORTMF,
DIALOG_REPORTSA,
DIALOG_REPORTNRPN,
DIALOG_REPORTBANEVADE,
DIALOG_REPORTGE,
DIALOG_REPORTRHN,
DIALOG_REPORTRSE,
DIALOG_REPORTLOG,
DIALOG_REPORTCARSURF,
DIALOG_REPORTNRPB,
DIALOG_REPORTFREE,
DIALOG_REPORTNOTLIST,
DIALOG_REPORTNOTLIST2,
DIALOG_UNMUTE,
DIALOG_REPORTNRPB2,
DIALOG_REPORTNAME,
DIALOG_SPEAKTOADMIN,
DIALOG_SUSPECTMENU,
DIALOG_REPORTTEAMNAME,
DIALOG_DEDICATEDPLAYER,
DIALOG_POMAILS,
DIALOG_PODETAIL,
DIALOG_POTRASHED,
DIALOG_POSTAMP,
DIALOG_PORECEIVER,
DIALOG_POMESSAGE,
LISTTOYS_DELETETOY,
LISTTOYS_DELETETOYCONFIRM,
G_LOCKER_MAIN,
G_LOCKER_EQUIPMENT,
G_LOCKER_SWATUNIFORM,
G_LOCKER_UNIFORM,
G_LOCKER_UNDERCOVER,
G_LOCKER_CLEARSUSPECT,
DIALOG_DPC,
DIALOG_DPC_WEAPONS,
DIALOG_DPC_COLOR,
DIALOG_STOREPRICES,
DIALOG_STOREITEMPRICE,
DIALOG_STORECLOTHINGPRICE,
DIALOG_GUNSHOPPRICE,
DIALOG_BARPRICE,
DIALOG_BARPRICE2,
DIALOG_SEXSHOP,
DIALOG_SEXSHOP2,
DIALOG_GUNPRICES,
DIALOG_RESTAURANT,
DIALOG_RESTAURANT2,
DIALOG_GASPRICE,
DIALOG_SWITCHGROUP,
DIALOG_MAKELEADER,
DIALOG_HBADGE,
DIALOG_AUCTIONS,
DIALOG_AUCTIONS2,
DIALOG_AUCTIONS3,
DIALOG_ADMINAUCTIONS,
DIALOG_ADMINAUCTIONS2,
DIALOG_ADMINAUCTIONS3,
DIALOG_ADMINAUCTIONS4,
DIALOG_ADMINAUCTIONS5,
DIALOG_ADMINAUCTIONS6,
DIALOG_ADMINAUCTIONS7,
DIALOG_REVISION,
DIALOG_CGAMESADMINMENU,
DIALOG_CGAMESSELECTPOKER,
DIALOG_CGAMESSETUPPOKER,
DIALOG_CGAMESCREDITS,
DIALOG_CGAMESSETUPPGAME,
DIALOG_CGAMESSETUPPGAME2,
DIALOG_CGAMESSETUPPGAME3,
DIALOG_CGAMESSETUPPGAME4,
DIALOG_CGAMESSETUPPGAME5,
DIALOG_CGAMESSETUPPGAME6,
DIALOG_CGAMESSETUPPGAME7,
DIALOG_CGAMESBUYINPOKER,
DIALOG_CGAMESCALLPOKER,
DIALOG_CGAMESRAISEPOKER,
SKIN_LIST,
SKIN_CONFIRM,
SKIN_DELETE,
SKIN_DELETE2,
SPEEDCAM_DIALOG_MAIN,
SPEEDCAM_DIALOG_RANGEC,
SPEEDCAM_DIALOG_LIMIT,
SPEEDCAM_DIALOG_OVERVIEW,
SPEEDCAM_DIALOG_EDIT,
SPEEDCAM_DIALOG_EDIT_IDX,
SPEEDCAM_DIALOG_EDIT_POS,
SPEEDCAM_DIALOG_EDIT_ROT,
SPEEDCAM_DIALOG_EDIT_RANGE,
SPEEDCAM_DIALOG_EDIT_LIMIT,
SPEEDCAM_DIALOG_DELETE,
SPEEDCAM_DIALOG_CONFIRMDEL,
SPEEDCAM_DIALOG_GETNEAREST,
NATION_APP_LIST,
NATION_APP_CHOOSE,
DIALOG_SHOPBUYTOYS,
DIALOG_SHOPBUYTOYS2,
DIALOG_SHOPBUYTOYS3,
DIALOG_VIPSHOP,
DIALOG_VIPSHOP2,
DIALOG_VIPSHOP3,
DIALOG_VIPBRONZE,
DIALOG_VIPBRONZE2,
DIALOG_VIPSILVER,
DIALOG_VIPSILVER2,
DIALOG_VIPGOLD,
DIALOG_PURCHASEVIP,
DIALOG_CARSHOP,
DIALOG_CARSHOP2,
DIALOG_MISCSHOP,
DIALOG_MISCSHOP2,
DIALOG_EDITSHOP,
DIALOG_EDITSHOP2,
DIALOG_EDITSHOP3,
DIALOG_SHOPBUSINESS,
DIALOG_SHOPBUSINESS2,
DIALOG_SHOPBUSINESS3,
DIALOG_SHOPBUSINESS4,
DIALOG_SHOPBUSINESS5,
DIALOG_EDITSHOPBUSINESS,
DIALOG_EDITSHOPBUSINESS2,
DIALOG_EDITSHOPBUSINESS3,
DIALOG_EDITSHOPBUSINESS4,
DIALOG_EDITSHOPBUSINESS5,
DIALOG_EDITSHOPBUSINESS6,
DIALOG_EDITSHOPBUSINESS7,
DIALOG_EDITSHOPBUSINESS8,
DIALOG_EDITSHOPBUSINESS9,
DIALOG_EDITSHOPBUSINESS10,
DIALOG_EDITSHOPBUSINESS11,
DIALOG_EDITSHOPBUSINESS12,
DIALOG_EDITSHOPBUSINESS13,
DIALOG_HOUSESHOP,
DIALOG_HOUSESHOP2,
DIALOG_HOUSESHOP3,
DIALOG_HOUSESHOP4,
DIALOG_HOUSESHOP5,
DIALOG_HOUSESHOP6,
DIALOG_HOUSESHOP7,
DIALOG_HOUSESHOP8,
DIALOG_ENTERPIN,
DIALOG_CREATEPIN,
DIALOG_CREATEPIN2,
DIALOG_VIEWSALE,
DIALOG_SHOPGIFTRESET,
DIALOG_SHOPTOTRESET,
DIALOG_HALLOWEENSHOP,
DIALOG_HALLOWEENSHOP1,
DIALOG_HALLOWEENSHOP2,
DIALOG_HEALTHCARE,
DIALOG_HEALTHCARE2,
DIALOG_RENTACAR,
DIALOG_SHOPHELPMENU,
DIALOG_EDITSHOPMENU,
DIALOG_CHARGEPLAYER,
DIALOG_SHOPNEON,
DIALOG_SHOPHELPMENU2,
DIALOG_SHOPHELPMENU3,
DIALOG_SHOPHELPMENU4,
DIALOG_SHOPHELPMENU5,
DIALOG_SHOPHELPMENU6,
DIALOG_SHOPHELPMENU7,
DIALOG_SHOPHELPMENU8,
DIALOG_SHOPHELPMENU9,
DIALOG_911MENU,
DIALOG_911EMERGENCY,
DIALOG_911MEDICAL,
DIALOG_911POLICE,
DIALOG_911TOWING,
DIALOG_SELLCREDITS,
DIALOG_RIMMOD,
DIALOG_RIMMOD2,
DIALOG_TACKLED,
DIALOG_LOCKER_OS,
DIALOG_LOCKER_COS,
DIALOG_LOCKER_FAMED,
DIALOG_PVIPVOUCHER,
DIALOG_HOUSEINVITE,
DIALOG_ARRESTREPORT,
DIALOG_NRNCONFIRM,
DIALOG_RFL_TEAMS,
DIALOG_RFL_SEL,
DIALOG_RFL_PLAYERS,
DISPLAY_STATS,
DISPLAY_STATS2,
DISPLAY_INV,
DISPLAY_INV2,
DIALOG_VOUCHER,
DIALOG_VOUCHER2,
DIALOG_VOUCHERADMIN,
DIALOG_HUNGERGAMES,
DIALOG_ROLL,
DIALOG_GANGTAG_MAIN,
DIALOG_GANGTAG_EDIT,
DIALOG_GANGTAG_EDIT1,
DIALOG_GANGTAG_ID,
DIALOG_GANGTAG_FAMILY,
DIALOG_GANGTAG_FSELECT,
DIALOG_GANGTAG_FTAG,
DIALOG_GANGTAG_FTAGSEL,
DIALOG_GANGTAG_FTAGEDIT,
DIALOG_CONFIRMADP,
DIALOG_JFINE,
DIALOG_JFINECONFIRM,
DIALOG_GIFTBOX_VIEW,
DIALOG_GIFTBOX_INFO,	
}


// Anti Cheat mau giap
enum _ACInfo
{
	Float:HealthDawkin, Float:ArmourDawkin,
}

// Player Enum
enum pEnum
{
	pVerified,
	pCode,
	pDiscordName[32+1],
	pDiscordTag[20+1],
	pDiscordID[20+1],
}

//Khu an toan
enum szInfo
{
	Float:szPosX,
	Float:szPosY,
	Float:szPosZ,
	szSize,
	szPickupID,
	Text3D: szTextID,
};

//Bai toan
enum E_SERVER_DATA
{
    bool: E_STARTED,
    E_ANSWER,
    E_START_TIME,
    E_TIMER,
}

//Vut sung
enum dData
{
    DropGunModel,
    Float:DropGunPosX,
    Float:DropGunPosY,
    Float:DropGunPosZ,
    DropGunVWorld,
    DropGunInterior,
};

enum eGroupData {
	g_iGroupType,
	g_szGroupMOTD[GROUP_MAX_MOTD_LEN],
	g_szGroupName[GROUP_MAX_NAME_LEN],
	g_iLockerGuns[MAX_GROUP_WEAPONS],
	g_iLockerCost[MAX_GROUP_WEAPONS],
	g_iAllegiance,
	g_iBugAccess,
	g_iRadioAccess,
	g_iDeptRadioAccess,
	g_iIntRadioAccess,
	g_iGovAccess,
	g_hDutyColour,
	g_hRadioColour,
	g_iLockerStock,
	g_iFreeNameChange,
	g_iSpikeStrips,
	g_iBarricades,
	g_iCones,
	g_iFlares,
	g_iBarrels,
	g_iBudget,
	g_iBudgetPayment,
	Float: g_fCratePos[3],
	g_iPaycheck[MAX_GROUP_RANKS],
	g_iCrateIsland,
	Text3D: g_tCrate3DLabel,
	g_iLockerCostType,
	g_iCratesOrder,
	g_iJCount,
	Float: g_fGaragePos[3],
}

enum eLockerData {
	g_iLockerSQLId,
	Float: g_fLockerPos[3],
	g_iLockerVW,
	g_iLockerShare,
	Text3D: g_tLocker3DLabel
}

enum eJurisdictionData {
	g_iJurisdictionSQLId,
	g_iAreaName[64]
}

enum eGroupVehData {
	gv_iSQLID,
	gv_iDisabled, // is equal to 1 when a car has been despawned due to a group not being able to afford it
	gv_iSpawnedID, // In-game spawned ID of vehicle
	gv_igID, // ID of group (faction) (0 if unrestricted - for civilian use)
	gv_igDivID, // ID of division restriction (0 if unrestricted)
	gv_irID, // ID of rank restriction (0 if unrestricted)
	gv_ifID, // ID of family (0 if unrestricted)
	gv_iType, // (0 - standard | 1 - Crate Transport)
	gv_iLoadMax, //(ie if type is set to 1, and vLoadMax set to 2, car will have a max capacity of 2 crates)
	gv_iModel, // Model of Vehicle
	gv_iPlate[32],
	Float:gv_fMaxHealth, //Maximum Health of Vehicle
	Float:gv_fFuel, // gas level of the vehicle
	gv_iCol1, // Color 1
	gv_iCol2, // Color 2
	gv_iVW,
	gv_iInt,
	Float:gv_fX, // X axis
	Float:gv_fY, // Y axis
	Float:gv_fZ, // Z axis
	Float:gv_fRotZ, // Vehicle Z Rotation
	gv_iUpkeep, // Upkeep fee - costs faction $
	gv_iMod[15],
	gv_iAttachedObjectID[2],
	gv_iAttachedObjectModel[2], // For permanently attached vehicle objects.. ie lightbar, neons
	Float:gv_fObjectX[2],
	Float:gv_fObjectY[2],
	Float:gv_fObjectZ[2],
	Float:gv_fObjectRX[2],
	Float:gv_fObjectRY[2],
	Float:gv_fObjectRZ[2],
}

enum eBiz {
    bName[MAX_BUSINESS_NAME],
	bOwner,
	bOwnerName[MAX_PLAYER_NAME],
	bValue,
	bType,
	bLevel,
	bLevelProgress,
	bAutoSale,
	bSafeBalance,
	bInventory,
	bInventoryCapacity,
	bStatus,
	bRankPay[6],
	Float: bExtPos[4],
	Float: bIntPos[4],
	Float: bSupplyPos[3],
	bInt,
	bVW,
	bMinInviteRank,
	bMinGiveRankRank,
	bMinSupplyRank,
	bMinSafeRank,
	bMinInventoryRank,
	bMinStatusRank,
	bMinDoorRank,
	bGunsOffered[31],
	bSkinsOffered[300],
	bToysOffered[100],
	bItemPrices[18],
	bTotalSales,
	bTotalProfits,
	Text3D: bStateText,
	Text3D: bDoorText,
	Text3D: bSupplyText,
	bPickup,
	bAutoPay,
	Float: bGasPrice,
	bStrictPrice,
	bOrderBy[MAX_PLAYER_NAME],
	bOrderState,
	bOrderAmount,
	bOrderDate[30],
	bCustomExterior,
	bCustomInterior,
	bGrade,

	Float: GasPumpPosX[MAX_BUSINESS_GAS_PUMPS],
	Float: GasPumpPosY[MAX_BUSINESS_GAS_PUMPS],
	Float: GasPumpPosZ[MAX_BUSINESS_GAS_PUMPS],
	Float: GasPumpAngle[MAX_BUSINESS_GAS_PUMPS],
	Float: GasPumpCapacity[MAX_BUSINESS_GAS_PUMPS],
	Float: GasPumpGallons[MAX_BUSINESS_GAS_PUMPS],
	GasPumpObjectID[MAX_BUSINESS_GAS_PUMPS],
	Text3D: GasPumpInfoTextID[MAX_BUSINESS_GAS_PUMPS],
	Text3D: GasPumpSaleTextID[MAX_BUSINESS_GAS_PUMPS],
	Float: GasPumpSaleGallons[MAX_BUSINESS_GAS_PUMPS],
	Float: GasPumpSalePrice[MAX_BUSINESS_GAS_PUMPS],
	GasPumpTimer[MAX_BUSINESS_GAS_PUMPS],
	GasPumpVehicleID[MAX_BUSINESS_GAS_PUMPS],

	Float: bParkPosX[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	Float: bParkPosY[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	Float: bParkPosZ[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	Float: bParkAngle[MAX_BUSINESS_DEALERSHIP_VEHICLES],

	Float: bPurchaseX[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	Float: bPurchaseY[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	Float: bPurchaseZ[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	Float: bPurchaseAngle[MAX_BUSINESS_DEALERSHIP_VEHICLES],

	bColor1[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	bColor2[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	bModel[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	bPrice[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	Float: bHealth[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	Float: bFuel[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	Lock[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	bVehID[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	DealershipVehStock[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	DealershipVehOrder[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	Text3D:bVehicleLabel[MAX_BUSINESS_DEALERSHIP_VEHICLES],
	bMonths,

	bGymEntryFee,
	bGymType, // 1 = swimming pool
	bGymBoxingArena1[2],
	bGymBoxingArena2[2],
	bGymBikePlayers[10],
	bGymBikeVehicles[10]
}

enum StoreItemCostEnum
{
	ItemValue
}

enum CargoArrayData
{
	Float:PosX,
	Float:PosY,
	Float:PosZ
}

enum WeaponsEnum
{
	WeaponId,
	WeaponMats,
	WeaponMinLevel
}

enum pkrInfo
{
	pkrActive,
	pkrPlaced,
	pkrObjectID,
	pkrMiscObjectID[MAX_POKERTABLEMISCOBJS],
	Text3D:pkrText3DID,
	Float:pkrX,
	Float:pkrY,
	Float:pkrZ,
	Float:pkrRX,
	Float:pkrRY,
	Float:pkrRZ,
	pkrVW,
	pkrInt,
	pkrPlayers,
	pkrActivePlayers,
	pkrActiveHands,
	pkrSlot[6],
	pkrPass[32],
	pkrLimit,
	pkrPulseTimer,
	pkrBuyInMax,
	pkrBuyInMin,
	pkrBlind,
	pkrTinkerLiveTime,
	pkrDelay,
	pkrSetDelay,
	pkrPos,
	pkrRotations,
	pkrSlotRotations,
	pkrActivePlayerID,
	pkrActivePlayerSlot,
	pkrRound,
	pkrStage,
	pkrActiveBet,
	pkrDeck[52],
	pkrCCards[5],
	pkrPot,
	pkrWinners,
	pkrWinnerID,
};

enum ShopItem
{
	sItemPrice,
	//sSold,
	//sMade,
}

enum cVehicleLoad
{
	vCrateAmt,
	vCrateID[6],
	vForkLoaded,
	vForkObject,
	vCarVestKit,
	vCarWindows,
}

enum crateInfo
{
	crActive,
	crObject,
	crInt,
	crVW,
	crPlacedBy[MAX_PLAYER_NAME],
	Float: crX,
	Float: crY,
	Float: crZ,
	GunQuantity,
	InVehicle,
	Text3D: crLabel,
}

enum Auction
{
    BiddingFor[64],
	InProgress,
	Bid,
	Bidder,
	Expires,
	Wining[MAX_PLAYER_NAME],
	Increment,
	Timer,
}

enum Barrel
{
	Float:sX,
	Float:sY,
	Float:sZ,
	sObjectID,
	sDeployedBy[MAX_PLAYER_NAME],
	sDeployedByStatus,
	sDeployedAt[MAX_ZONE_NAME]
}

enum Barricade
{
	Float:sX,
	Float:sY,
	Float:sZ,
	sObjectID,
	sObject,
	sDeployedBy[MAX_PLAYER_NAME],
	sDeployedByStatus,
	sDeployedAt[MAX_ZONE_NAME]
}

enum Flare
{
	Float:sX,
	Float:sY,
	Float:sZ,
	sObjectID,
	sDeployedBy[MAX_PLAYER_NAME],
	sDeployedByStatus,
	sDeployedAt[MAX_ZONE_NAME]
}

enum Cone
{
	Float:sX,
	Float:sY,
	Float:sZ,
	sObjectID,
	sDeployedBy[MAX_PLAYER_NAME],
	sDeployedByStatus,
	sDeployedAt[MAX_ZONE_NAME]
}

enum Spikes
{
	Float:sX,
	Float:sY,
	Float:sZ,
	sObjectID,
	sPickupID,
	sDeployedBy[MAX_PLAYER_NAME],
	sDeployedByStatus,
	sDeployedAt[MAX_ZONE_NAME]
}

enum Plant
{
	 pOwner,
	 pObject,
	 pPlantType,
	Float: pPos[3],
	 pVirtual,
	 pInterior,
	 pGrowth,
	 pExpires,
	pDrugsSkill,
	pObjectSpawned,
}

enum BusinessSale
{
	bID,
	bBusinessID,
	 bText[128],
	 bPrice,
	 bAvailable,
	 bPurchased,
	 bType,
}

enum SAZONE_MAIN { //Betamaster
	SAZONE_NAME[28],
	Float:SAZONE_AREA[6]
};

enum MAIN_ZONES { //Betamaster
	SAZONE_NAME[28],
	Float:SAZONE_AREA[6]
};

enum callinfo
{
	HasBeenUsed,
	Area[28],
	MainZone[28],
	Description[128],
	CallFrom,
	RespondingID,
	Type,
 	TimeToExpire,
	BeingUsed,
	CallExpireTimer,
	ReplyTimerr
}

enum reportinfo
{
	HasBeenUsed,
	Report[128],
	ReportFrom,
	CheckingReport,
 	TimeToExpire,
	BeingUsed,
	ReportExpireTimer,
	ReplyTimerr,
	ReportPriority,
	ReportLevel
}

enum pBoxingStats
{
	TitelName[128],
	TitelWins,
	TitelLoses,
};

enum EventKernelEnum
{
	EventAdvisor,
	EventStatus,
	EventType,
	EventInfo[128],
	Float: EventHealth,
	Float: EventArmor,
	Float: EventPositionX,
	Float: EventPositionY,
	Float: EventPositionZ,
	EventInterior,
	EventWorld,
	EventWeapons[5],
	EventTeamColor[2],
    EventTeamSkin[2],
    EventLimit,
    EventTime,
	EventFootRace,
    EventPlayers,
    EventRequest,
    EventStartRequest,
    EventCreator,
    EventStaff[5],
    EventJoinStaff,
	EventCustomInterior,
    VipOnly,
    Float: EventTeamPosX1,
    Float: EventTeamPosY1,
    Float: EventTeamPosZ1,
    Float: EventTeamPosX2,
    Float: EventTeamPosY2,
    Float: EventTeamPosZ2
}

enum PaintBallArenaEnum
{
	pbArenaName[64],
	pbOwner[MAX_PLAYER_NAME],
	pbPassword[64],
	pbActive,
	pbExploitPerm,
	pbFlagInstagib,
	pbFlagNoWeapons,
	pbTimeLeft,
	pbGameType,
	pbLocked,
	pbLimit,
	pbPlayers,
	pbTeamRedKills,
	pbTeamRedDeaths,
	pbTeamRedScores,
	pbTeamBlueKills,
	pbTeamBlueDeaths,
	pbTeamBlueScores,
	pbTeamRed,
	pbTeamBlue,
	Float:pbHillX,
	Float:pbHillY,
	Float:pbHillZ,
	Float:pbHillRadius,
	Text3D:pbHillTextID,
	pbWorldBonds[3],
	pbBidMoney,
	pbMoneyPool,
	pbWeapons[3],
	pbVirtual,
	pbInterior,
	pbFlagRedActive,
	pbFlagBlueActive,
	pbFlagRedActiveTime,
	pbFlagBlueActiveTime,
	Text3D:pbTeamRedTextID,
	Text3D:pbTeamBlueTextID,
	Text3D:pbFlagRedTextID,
	Text3D:pbFlagBlueTextID,
	pbFlagRedID,
	pbFlagBlueID,
	Float: pbHealth,
	Float: pbArmor,
	Float: pbFlagRedSpawn[3],
	Float: pbFlagBlueSpawn[3],
	Float: pbFlagRedPos[3],
	Float: pbFlagBluePos[3],
	Float: pbDeathmatch1[4],
	Float: pbDeathmatch2[4],
	Float: pbDeathmatch3[4],
	Float: pbDeathmatch4[4],
	Float: pbTeamRed1[4],
	Float: pbTeamRed2[4],
	Float: pbTeamRed3[4],
	Float: pbTeamBlue1[4],
	Float: pbTeamBlue2[4],
	Float: pbTeamBlue3[4],
};

enum TurfWarsEnum
{
	twName[64],
	twOwnerId,
	twLocked,
	twSpecial,
	twVulnerable,
	twAttemptId,
	twTimeLeft,
	twGangZoneId,
	twAreaId,
	twActive,
	twFlash,
	twFlashColor,
	Float: twMinX,
	Float: twMinY,
	Float: twMaxX,
	Float: twMaxY,
};

enum fInfo
{
	FamilyTaken,
	FamilyName[42],
	FamilyColor,
	FamilyTurfTokens,
	FamilyLeader[MAX_PLAYER_NAME],
	FamilyMembers,
	Float:FamilySpawn[4],
	FamilyInterior,
	FamilyCash,
	FamilyBank,
	FamilyMats,
	FamilyHeroin,
	FamilyPot,
	FamilyCrack,
	Float:FamilySafe[3],
	FamilySafeVW,
	FamilySafeInt,
	FamilyUSafe,
	FamilyPickup,
	FamilyMaxSkins,
	FamilySkins[8],
	Float: FamilyEntrance[4],
	Float: FamilyExit[4],
	FamilyEntrancePickup,
	FamilyExitPickup,
	Text3D:FamilyEntranceText,
	Text3D:FamilyExitText,
	FamilyCustomMap,
	FamilyVirtualWorld,
	FamilyResetSpawns,
	FamilyGuns[10],
	gtObject,
	gt_Text[32],
	gt_FontFace[32],
	gt_FontSize,
	gt_Bold,
	gt_FontColor,
	gt_BackColor,
	gt_SPUsed
};

enum fPoint
{
	pointID,
	pointVW,
	Float:Pointx,
	Float:Pointy,
	Float:Pointz,
	Type,
	Vulnerable,
	MatPoint,
	CratePoint,
	Announced,
	ClaimerId,
	ClaimerTeam,
	TimeToClaim,
	TimeLeft,
	Owner[32],
	PlayerNameCapping[MAX_PLAYER_NAME],
	CapperName[MAX_PLAYER_NAME],
	Name[32],
	TakeOverTimerStarted,
	TakeOverTimer,
	Text3D:TextLabel,
	CaptureTimerEx2,
	Stock,
	Text3D:CaptureProccess,
	Text3D:CaptureProgress,
	CaptureProccessEx,
	Float: Capturex,
	Float: Capturey,
	Float: Capturez,
	CapTime,
	CapFam,
	CapName[MAX_PLAYER_NAME],
	CapCrash,
	PointPickupID
}

enum pFishing
{
	pFish1[20],
	pFish2[20],
	pFish3[20],
	pFish4[20],
	pFish5[20],
	pWeight1,
	pWeight2,
	pWeight3,
	pWeight4,
	pWeight5,
	pFid1,
	pFid2,
	pFid3,
	pFid4,
	pFid5,
	pLastFish,
	pFishID,
	pLastWeight,
};

enum hNews
{
	hTaken1,
	hTaken2,
	hTaken3,
	hTaken4,
	hTaken5,
	hTaken6,
	hTaken7,
	hTaken8,
	hTaken9,
	hTaken10,
	hTaken11,
	hTaken12,
	hTaken13,
	hTaken14,
	hTaken15,
	hTaken16,
	hTaken17,
	hTaken18,
	hTaken19,
	hTaken20,
	hTaken21,
	hAdd1[64],
	hAdd2[64],
	hAdd3[64],
	hAdd4[64],
	hAdd5[64],
	hAdd6[64],
	hAdd7[64],
	hAdd8[64],
	hAdd9[64],
	hAdd10[64],
	hAdd11[64],
	hAdd12[64],
	hAdd13[64],
	hAdd14[64],
	hAdd15[64],
	hAdd16[64],
	hAdd17[64],
	hAdd18[64],
	hAdd19[64],
	hAdd20[64],
	hAdd21[64],
	hContact1[64],
	hContact2[64],
	hContact3[64],
	hContact4[64],
	hContact5[64],
	hContact6[64],
	hContact7[64],
	hContact8[64],
	hContact9[64],
	hContact10[64],
	hContact11[64],
	hContact12[64],
	hContact13[64],
	hContact14[64],
	hContact15[64],
	hContact16[64],
	hContact17[64],
	hContact18[64],
	hContact19[64],
	hContact20[64],
	hContact21[64],
};

enum sInfo
{
	sStorage,
	//sFe,
	//sCu,
	sAttached,
	sCash,
	sPot,
	sCrack,
	sMats,
	sHouseID,
	sVehicleSlot
};

enum pInfo
{
	pId,
	pVeSo,
	pDanhHieu,
	pFe,
	pCu,
	pnDP,
    pTienCuoc,
    pSoLanMuaVeSo,
	pOnline,
	pLevel,
	pAdmin,
	pDonateRank,
	gPupgrade,
	pConnectHours,
	pReg,
	pSex,
	pBirthDate[11],
	pOrigin,
	pCash,
	pHospital,
	pMuted,
	pPrisonReason[128],
	pPrisonedBy[MAX_PLAYER_NAME],
	pRMuted,
	pRMutedTotal,
	pRMutedTime,
	pDMRMuted,
	pVMuted,
	pVMutedTime,
	pExp,
	pXP,
	pAccount,
	pCrimes,
	pPaintTeam,
	pKills,
	pDeaths,
	pArrested,
	pPhoneBook,
	pLottoNr,
	pFishes,
	pBiggestFish,
	pJob,
	pAutoTextReply[64],
	pPhonePrivacy,
	pJob2,
	p911Muted,
	pNMute,
	pNMuteTotal,
	pADMute,
	pADMuteTotal,
	pHelpMute,
	pPayCheck,
	pHeadValue,
	pJailTime,
	pWRestricted,
	pMats,
	pNation,
	pLeader,
	pMember,
	pDivision,
	pFMember,
	pSpeakerPhone,
	pRank,
	pDetSkill,
	pSexSkill,
	pBoxSkill,
	pLawSkill,
	pMechSkill,
	pTruckSkill,
	pWantedLevel,
	pDirtyMoney,
	pCayCanSa,
	pCayMaTuy,
	pPot,
	pCrack,
	pHelper,
	pDrugsSkill,
	pArmsSkill,
	pSmugSkill,
	pFishSkill,
	Float:pHealth,
	Float:pArmor,
	Float:pSHealth,
	pInt,
	pBanAppealer,
	pPR,
	pHR,
	pAP,
	pSecurity,
	pShopTech,
	pFactionModerator,
	pGangModerator,
	pUndercover,
	pTogReports,
	pModel,
	pPnumber,
	pPhousekey,
	pPhousekey2,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	Float:pPos_r,
	pCarLic,
	pSpeedo,
	pFlyLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pGuns[12],
	pAGuns[12],
	pConnectSeconds,
	pPayDayHad,
	pCDPlayer,
	pWins,
	pLoses,
	pTut,
	pWarns,
	pC4,
	pC4Get,
	pC4Used,
	pMarriedID,
	pMarriedName[MAX_PLAYER_NAME],
	pLock,
	pLockCar,
	pSprunk,
	pCigar,
	pPole,
	pSpraycan,
	pRope,
	pDice,
	pBombs,
	pDuty,
	pFightStyle,
	pEmail[128],
	pIP[16],
	pSecureIP[16],
	pBanned,
	pPermaBanned,
	pDisabled,
	pAccent,
	pCHits,
	pFHits,
	pCrates,
	pVW,
	pRenting,
	pTempVIP,
	pBuddyInvited,
	pVIPInviteDay,
	pTokens,
	pPaintTokens,
	pDrugsTime,
	pLawyerTime,
	pGangWarn,
	pCSFBanned,
	pMechTime,
	pSexTime,
	pLawyerFreeTime,
	pGiftTime,
	pContractBy[MAX_PLAYERS],
	pContractDetail[64],
	pRadio,
	pRadioFreq,
	pDutyHours,
	pAcceptedHelp,
	pAcceptReport,
	pShopTechOrders,
	pTrashReport,
	pInsurance,
	pTriageTime,
	pVehicleKeys,
	pVehicleKeysFrom,
	pTaxiLicense,
	pTicketTime,
	pScrewdriver,
	pWristwatch,
	pSurveillance,
	pSmslog,
	pTire,
	pFirstaid,
	pRccam,
	pReceiver,
	pGPS,
	pSweep,
	pSweepLeft,
	pBugged,
	pCheckCash,
	pChecks,
	pWeedObject,
	pWSeeds,
	pWarrant[128],
	pJudgeJailTime,
	pJudgeJailType,
	pBeingSentenced,
	pProbationTime,
	pDMKills,
	pOrder,
	pOrderConfirmed,
	pCallsAccepted,
	pPatientsDelivered,
	pLiveBanned,
	pFreezeBank,
	pFreezeHouse,
	pFreezeCar,
	pServiceTime,
	pFirework,
	pBoombox,
	pHydration,
	pRacePlayerLaps,
	pDoubleEXP,
	pEXPToken,
	pRingtone,
	pVIPM,
	pVIPMO,
	pVIPExpire,
	pGVip,
	pSMod,
	pWatchdog,
	pPSFPot,
	pPSFCrack,
	pPSFMats,
	pVIPSold,
	pGoldBoxTokens,
	Float: pRewardHours,
	pRewardDrawChance,
	pRVehRestricted,
	pRVehWarns,
	pLastRVehWarn,
	pFlagged,
	pPaper,
	pMailEnabled,
	pMailbox,
	pBusiness,
	pBusinessRank,
	pTreasureSkill,
	pMetalDetector,
	pHelpedBefore,
	pTrickortreat, // REUSED FOR ST PATRICK'S DAY LUCKY CHARMS AS PER JOHN
	pLastCharmReceived,
	pRHMutes,
	pRHMuteTime,
	pGiftCode,
	pTable,
	pOpiumSeeds,
	pRawOpium,
	pHeroin,
	pSyringes,
	pSkins,
	pHunger,
	pHungerTimer,
	pHungerDeathTimer,
	pFitness,
	pForcePasswordChange,
	pCredits,
	pHealthCare,
	pTotalCredits,
	pReceivedCredits,
	pRimMod,
	pHasTazer,
	pHasCuff,
	pCarVoucher,
	pReferredBy[MAX_PLAYER_NAME],
	pPendingRefReward,
	pRefers,
	pFamed,
	pFMuted,
	pDefendTime,
	pPVIPVoucher,
	pVehicleSlot,
	pToySlot,
	pRFLTeam,
	pRFLTeamL,
	pVehVoucher,
	pSVIPVoucher,
	pGVIPVoucher,
	pGiftVoucher,
	pFallIntoFun,
	pHungerVoucher,
	pBoughtCure,
	pVials,
	pAdvertVoucher,
	pShopCounter,
	pShopNotice,
	pSVIPExVoucher,
	pGVIPExVoucher,
	pVIPSellable,
	pReceivedPrize
};

enum pvInfo
{
	pvSlotId,
    Float:pvPosX,
	Float:pvPosY,
	Float:pvPosZ,
 	Float:pvPosAngle,
	pvId,
	pvModelId,
	pvLock,
	pvLocked,
	pvPaintJob,
	pvColor1,
	pvColor2,
	pvMods[MAX_MODS],
	pvAllowedPlayerId,
	pvPark,
	//pvNumberPlate[32], // sz
	pvPrice,
	pvTicket,
	pvWeapons[3],
	pvWepUpgrade,
	pvImpounded,
	pvSpawned,
	pvDisabled,
	pvPlate[32],
	pvRestricted,
	Float: pvFuel,
	Float: pvHealth,
	pvVW,
	pvInt,
	pvCrashFlag,
	pvCrashVW,
	Float:pvCrashX,
	Float:pvCrashY,
	Float:pvCrashZ,
	Float:pvCrashAngle
};

enum ptInfo
{
	ptID,
    ptModelID,
	ptBone,
	ptTradable,
	ptSpecial,
    Float:ptPosX,
	Float:ptPosY,
	Float:ptPosZ,
	Float:ptRotX,
	Float:ptRotY,
	Float:ptRotZ,
	Float:ptScaleX,
	Float:ptScaleY,
	Float:ptScaleZ,
};

enum hInfo
{
	hSQLId,
	hOwned,
	hLevel,
	hCustomInterior,
	hDescription[16],
	hOwnerID,
	hOwnerName[MAX_PLAYER_NAME],
	Float: hExteriorX,
	Float: hExteriorY,
	Float: hExteriorZ,
	Float: hExteriorR,
	Float: hExteriorA,
	Float: hInteriorX,
	Float: hInteriorY,
	Float: hInteriorZ,
	Float: hInteriorR,
	Float: hInteriorA,
	hExtIW,
	hExtVW,
	hIntIW,
	hIntVW,
	hLock,
	hRentable,
	hRentFee,
	hValue,
	hSafeMoney,
	hPot,
	hCrack,
	hMaterials,
	hHeroin,
	hWeapons[ 5 ],
	hGLUpgrade,
	hPickupID,
	Text3D: hTextID,
	hCustomExterior,
	Float: hMailX,
	Float: hMailY,
	Float: hMailZ,
	Float: hMailA,
	hMailType,
	hMailObjectId,
	Text3D: hMailTextID,
	Float: hClosetX,
	Float: hClosetY,
	Float: hClosetZ,
	Text3D: hClosetTextID,
};

enum dmpInfo
{
	dmpSQLId,
	dmpMapIconID,
	Float: dmpPosX,
	Float: dmpPosY,
	Float: dmpPosZ,
	dmpMarkerType,
	dmpColor,
	dmpVW,
	dmpInt,
}

enum ddInfo
{
	ddSQLId,
	ddDescription[128],
	ddOwner,
	ddOwnerName[42],
	ddPickupID,
	Text3D: ddTextID,
	ddCustomInterior,
	ddExteriorVW,
	ddExteriorInt,
	ddInteriorVW,
	ddInteriorInt,
	Float: ddExteriorX,
	Float: ddExteriorY,
	Float: ddExteriorZ,
	Float: ddExteriorA,
	Float: ddInteriorX,
	Float: ddInteriorY,
	Float: ddInteriorZ,
	Float: ddInteriorA,
	ddCustomExterior,
	ddType,
	ddRank,
	ddVIP,
	ddFamed,
	ddDPC,
	ddAllegiance,
	ddGroupType,
	ddFamily,
	ddFaction,
	ddAdmin,
	ddWanted,
	ddVehicleAble,
	ddColor,
	ddPickupModel,
	ddPass[24],
	ddLocked,
};

enum gInfo
{
    gGATE,
    gHID,
	Float: gSpeed,
	Float: gRange,
	gModel,
	gVW,
	gInt,
	Float:gPosX,
	Float:gPosY,
	Float:gPosZ,
	Float:gRotX,
	Float:gRotY,
	Float:gRotZ,
	Float:gPosXM,
	Float:gPosYM,
	Float:gPosZM,
	Float:gRotXM,
	Float:gRotYM,
    Float:gRotZM,
    gStatus,
    gPass[24],
	gAllegiance,
	gGroupType,
	gGroupID,
	gFamilyID,
    gRenderHQ,
	gTimer,
	gAutomate,
	gLocked,
};

enum ePoints
{
	epObjectID,
	Text3D: epText3dID,
	Float:epPosX,
	Float:epPosY,
	Float:epPosZ,
	epVW,
	epInt,
	epPrize[64],
	epFlagable,
};

/*enum cmdInfo
{
    id,
	name[255],
	params[255],
	description[255],
	type,
	subtype,
	perms
};*/

/*enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32],
};*/

enum _scInfoEnum
{
	_scDatabase,            // database ID
	bool:_scActive,         // whether or not the speed camera array pos is in use
	Float:_scPosX,          // x position of speedcam
	Float:_scPosY,          // y position of speedcam
	Float:_scPosZ,          // z position of speedcam
	Text3D: _scTextID,
	Float:_scRotation,      // rotation of speedcam
	Float:_scRange,         // range that the speedcam will capture at
	Float:_scLimit,         // speed limit that will trigger the speedcam capture callback
	_scObjectId,            // self-explanatory
};

enum mbInfo
{
	mbVW,
	mbInt,
	mbModel,
	Float: mbPosX,
	Float: mbPosY,
	Float: mbPosZ,
	Float: mbAngle,
	mbObjectId,
	Text3D: mbTextId
}

enum tlInfo
{
	tlSQLId,
	tlText[128],
	tlPickupID,
	Text3D: tlTextID,
	Float: tlPosX,
	Float: tlPosY,
	Float: tlPosZ,
	tlVW,
	tlInt,
	tlColor,
	tlPickupModel
}

enum pnsInfo
{
	pnsSQLId,
	pnsStatus,
	Float: pnsPosX,
	Float: pnsPosY,
	Float: pnsPosZ,
	pnsVW,
	pnsInt,
	pnsPickupID,
	Text3D: pnsTextID,
	pnsMapIconID,
	pnsGroupCost,
	pnsRegCost
}

enum arrestInfo
{
	arrestSQLId,
	arrestType,
	Float: arrestPosX,
	Float: arrestPosY,
	Float: arrestPosZ,
	arrestVW,
	arrestInt,
	Text3D: arrestTextID,
	arrestPickupID
}

enum impoundInfo
{
	impoundSQLId,
	Float: impoundPosX,
	Float: impoundPosY,
	Float: impoundPosZ,
	impoundVW,
	impoundInt,
	Text3D: impoundTextID
}

enum HoldingEnumAll
{
	holdingmodelid,
	holdingprice,
	holdingmodelname[24]
}

enum HoldingEnum
{
	holdingmodelid,
	holdingprice,
	holdingmodelname[24]
}

enum AC_STRUCT_INFO {
	Float:LastOnFootPosition[3],
	checkmaptp,
	maptplastclick,
	Float:maptp[3]
}

enum mdcInfo
{
	mdcCrime[64],
	mdcIssuer[24],
	mdcActive[3],
}

// Relay For Life

enum rflinfo
{
	RFLsqlid,
	RFLused,
	RFLname[25],
	RFLmembers,
	RFLleader[MAX_PLAYER_NAME],
	RFLlaps
}

// Hunger Games
enum HUNGER_PLAYER_INFO
{
	hgInEvent,
	Float: hgLastPosition[3],
	Float: hgLastHealth,
	Float: hgLastArmour,
	hgLastVW,
	hgLastInt,
	hgLastWeapon[12],
	hgVoucher,
	PlayerText: hgPlayerText,
	PlayerText: hgLoadingText,
	PlayerText: hgTimeLeftText,
	PlayerText: hgCreditsText
}

enum HUNGER_BACKPACK_INFO
{
	hgBackpackId,
	hgBackpackPickupId,
	Text3D: hgBackpack3DText,
	hgBackpackType,
	Float: hgBackpackPos[3],
	hgActiveEx
}

enum GANG_TAG_INFO
{
	gt_SQLID,
	gt_Object,
	Float:gt_PosX,
	Float:gt_PosY,
	Float:gt_PosZ,
	Float:gt_PosRX,
	Float:gt_PosRY,
	Float:gt_PosRZ,
	gt_VW,
	gt_Int,
	gt_ObjectID,
	gt_Used,
	gt_Family,
	gt_Time,
	gt_TimeLeft,
	gt_Timer
}

enum FIREWORK_INFO
{
	fireworkId,
	Float: fireworkPos[3]
}

enum cStore
{
	cId,
	cXP
};
